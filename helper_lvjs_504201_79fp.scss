const isEven = num => num % 2 === 0;
const findSmallestNumber = numbers => Math.min(...numbers);
const binarySearch = (array, target) => { let start = 0, end = array.length - 1; while (start <= end) { const mid = Math.floor((start + end) / 2); if (array[mid] === target) return mid; else if (array[mid] < target) start = mid + 1; else end = mid - 1; } return -1; };
const getUniqueValues = array => [...new Set(array)];
const getRandomHexColor = () => `#${Math.floor(Math.random() * 16777215).toString(16)}`;
const squareRoot = num => Math.sqrt(num);
const rotateArrayLeft = (array, k) => { const rotations = k % array.length; return [...array.slice(rotations), ...array.slice(0, rotations)]; };

const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));
const pipe = (...fns) => x => fns.reduce((v, f) => f(v), x);

const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));
for (let i = 0; i < getRandomNumber(); i++) { console.log(getRandomString()); }
